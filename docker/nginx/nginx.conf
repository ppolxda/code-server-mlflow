upstream mlflow_group {
    server mlflow:5000;
}

# upstream labelstud_group {
#     server label-studio:8080;
# }

# upstream webserver_group {
#     server webserver:8080;
# }

# upstream flower_group {
#     server flower:5555;
# }

upstream minio_group {
    server minio:9000;
}

upstream minio_console_group {
    server minio:9001;
}

upstream vscode_group {
    server code-server:8080;
}


upstream jupyter_group {
    server jupyter-notebook:8888;
}


server {
    listen       80;
    server_name  localhost;
    listen       443 ssl default_server;
    ssl_certificate /etc/letsencrypt/nginx.crt;
    ssl_certificate_key /etc/letsencrypt/nginx.key;

    # location /system/ {
    #     proxy_send_timeout 600;
    #     proxy_connect_timeout 600;
    #     proxy_read_timeout 600;  # 秒
    #     proxy_pass http://system_group/;
    # }

    # location /py/ {
    #     proxy_send_timeout 600;
    #     proxy_connect_timeout 600;
    #     proxy_read_timeout 600;  # 秒
    #     proxy_pass http://system_group/py/;
    # }

    # Send requests starting with `/mlflow/api` to `/api`
    location ^~ /mlflow/api/ {
        # Define the location of the proxy server to send the request to
        proxy_pass http://mlflow_group/api/;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 20480M;
    }

    # Send other requests to `/mlflow`
    location /mlflow/ {
        # Define the location of the proxy server to send the request to
        proxy_pass http://mlflow_group/mlflow/;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 20480M;
    }

    # location /labelstud/ {
    #     proxy_pass http://labelstud_group/;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Real-IP          $remote_addr;
    #     proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto  $scheme;
    #     proxy_redirect off;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     client_max_body_size 2048M;
    #     proxy_read_timeout 3600;
    # }

    # location /airflow/ {
    #     proxy_pass http://webserver_group;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Real-IP          $remote_addr;
    #     proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto  $scheme;
    #     proxy_redirect off;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # location /flower {
    #     proxy_pass http://flower_group;
    #     proxy_set_header Host $http_host;
    #     proxy_redirect off;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    location /minio/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_redirect off;
        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
        client_max_body_size 2048M;

        rewrite   ^/minio/(.*) /$1 break;
        proxy_pass http://minio_console_group/; # If you are using docker-compose this would be the hostname i.e. minio
        # Health Check endpoint might go here. See https://www.nginx.com/resources/wiki/modules/healthcheck/
        # /minio/health/live;
    }

    location /coding/ {
      proxy_pass http://vscode_group/;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Accept-Encoding gzip;
    }

    location /jupyter/ {
      proxy_pass http://jupyter_group/jupyter/;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Accept-Encoding gzip;
    }

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_connect_timeout 300;
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
        client_max_body_size 2048M;

        proxy_pass http://minio_group; # If you are using docker-compose this would be the hostname i.e. minio
        # Health Check endpoint might go here. See https://www.nginx.com/resources/wiki/modules/healthcheck/
        # /minio/health/live;
    }
}
